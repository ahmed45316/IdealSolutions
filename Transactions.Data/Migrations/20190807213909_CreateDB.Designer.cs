// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Transactions.Data.Context;

namespace Transactions.Data.Migrations
{
    [DbContext(typeof(TransactionContext))]
    [Migration("20190807213909_CreateDB")]
    partial class CreateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Transactions.Entities.Entites.Policy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal?>("AllTotalPriceAfterTax");

                    b.Property<decimal?>("AllTotalPriceBeforTax");

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateUserId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<Guid?>("ModifyUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(512);

                    b.Property<byte>("PayType");

                    b.Property<DateTime>("PolicyDateTime");

                    b.Property<DateTime?>("PolicyDateTimeHijri");

                    b.Property<decimal?>("TotalDiscount");

                    b.Property<decimal?>("TotalOverNightPrice");

                    b.Property<decimal?>("TotalRecallPrice");

                    b.Property<decimal?>("TotalTaxValue");

                    b.Property<decimal?>("TotalTownPrice");

                    b.Property<decimal?>("TotalTrackCost");

                    b.Property<decimal?>("TotalTrackValue");

                    b.HasKey("Id");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("Transactions.Entities.Entites.PolicyDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CarId");

                    b.Property<string>("CarNo")
                        .HasMaxLength(16);

                    b.Property<Guid>("CarTypeId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<Guid>("CreateUserId");

                    b.Property<Guid>("CustomerCategoryId");

                    b.Property<Guid>("CustomerId");

                    b.Property<decimal?>("Discount");

                    b.Property<Guid>("InvoicTypeId");

                    b.Property<bool>("IsRentedCar");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<Guid?>("ModifyUserId");

                    b.Property<string>("Notes")
                        .HasMaxLength(512);

                    b.Property<decimal?>("OverNightPrice");

                    b.Property<DateTime?>("PolicyDetailDatetime");

                    b.Property<Guid>("PolicyId");

                    b.Property<string>("PolicyNumber")
                        .HasMaxLength(64);

                    b.Property<decimal?>("RecallPrice");

                    b.Property<Guid>("RepresentativeId");

                    b.Property<Guid>("TaxTypeId");

                    b.Property<decimal?>("TaxValue");

                    b.Property<decimal?>("TotalPriceAfterTax");

                    b.Property<decimal?>("TotalPriceBeforTax");

                    b.Property<decimal?>("TownPrice");

                    b.Property<decimal?>("TrackCost");

                    b.Property<Guid>("TrackSettingId");

                    b.Property<decimal?>("TrackValue");

                    b.HasKey("Id");

                    b.HasIndex("PolicyId");

                    b.ToTable("PolicyDetails");
                });

            modelBuilder.Entity("Transactions.Entities.Entites.PolicyDetail", b =>
                {
                    b.HasOne("Transactions.Entities.Entites.Policy", "Policy")
                        .WithMany("PolicyDetails")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
