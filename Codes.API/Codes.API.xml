<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Codes.API</name>
    </assembly>
    <members>
        <member name="T:Codes.API.Controllers.Base.BaseController">
            <inheritdoc />
        </member>
        <member name="T:Codes.API.Controllers.Base.IMainEndPoint`1">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.Base.IMainEndPoint`1.GetAll">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.Base.IMainEndPoint`1.Get(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.Base.IMainEndPoint`1.Add(`0)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.Base.IMainEndPoint`1.Update(`0)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.Base.IMainEndPoint`1.Remove(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Codes.API.Controllers.CompanyController">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.#ctor(Codes.Services.Interfaces.ICompanyServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.Add(Codes.Services.Dto.CompanyDto)">
            <summary>
            Add Company 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.Get(System.Guid)">
            <summary>
            Get company by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.Update(Codes.Services.Dto.CompanyDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Program">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Program.Main(System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Program.CreateWebHostBuilder(System.String[])">
            <inheritdoc />
        </member>
        <member name="T:Codes.API.Startup">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <inheritdoc />
        </member>
        <member name="P:Codes.API.Startup.Configuration">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">Contract for service descriptors</param>
        </member>
        <member name="M:Codes.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
             This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">Provide mechanisms to configure requests</param>
            <param name="env">Provide information about hosting</param>
        </member>
    </members>
</doc>
