<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Codes.API</name>
    </assembly>
    <members>
        <member name="T:Codes.API.Controllers.Base.BaseController">
            <inheritdoc />
        </member>
        <member name="T:Codes.API.Controllers.Base.IMainEndPoint`1">
            <summary>
            Main ENd Point INterface
            </summary>
            <typeparam name="TDto"></typeparam>
        </member>
        <member name="M:Codes.API.Controllers.Base.IMainEndPoint`1.GetAll">
            <summary>
            Get All
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.Base.IMainEndPoint`1.Get(System.Guid)">
            <summary>
            Get By Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.Base.IMainEndPoint`1.Add(`0)">
            <summary>
            Add
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.Base.IMainEndPoint`1.Update(`0)">
            <summary>
            Update
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.Base.IMainEndPoint`1.Remove(System.Guid)">
            <summary>
            Delete
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.BranchController">
            <summary>
            Branch Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.BranchController.#ctor(Codes.Services.Interfaces.IBranchServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.BranchController.Add(Codes.Services.Dto.BranchDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.BranchController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.BranchController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.BranchController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.BranchFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.BranchController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.BranchController.Update(Codes.Services.Dto.BranchDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.CarController">
            <summary>
            Car Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.CarController.#ctor(Codes.Services.Interfaces.ICarServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.CarController.Add(Codes.Services.Dto.CarDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CarController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CarController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CarController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.CarFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CarController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CarController.Update(Codes.Services.Dto.CarDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.CarTypeController">
            <summary>
            CarType Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.CarTypeController.#ctor(Codes.Services.Interfaces.ICarTypeServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.CarTypeController.Add(Codes.Services.Dto.CarTypeDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CarTypeController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CarTypeController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CarTypeController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.MainFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CarTypeController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CarTypeController.Update(Codes.Services.Dto.CarTypeDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.CityController">
            <summary>
            City Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.CityController.#ctor(Codes.Services.Interfaces.ICityServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.CityController.Add(Codes.Services.Dto.CityDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CityController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CityController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CityController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.CityFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CityController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CityController.Update(Codes.Services.Dto.CityDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.CompanyController">
            <summary>
            Company Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.#ctor(Codes.Services.Interfaces.ICompanyServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.Add(Codes.Services.Dto.CompanyDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.MainFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.GetDropDown(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.SearchCriteriaFilter})">
            <summary>
            GetAll Data paged for dropdown
            </summary>
            <param name="filter">Filter resposiable for search</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CompanyController.Update(Codes.Services.Dto.CompanyDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.CountryController">
            <summary>
            Country Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.CountryController.#ctor(Codes.Services.Interfaces.ICountryServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.CountryController.Add(Codes.Services.Dto.CountryDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CountryController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CountryController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CountryController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.MainFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CountryController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CountryController.Update(Codes.Services.Dto.CountryDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.CustomerCategoryController">
            <summary>
            Customer Category Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.CustomerCategoryController.#ctor(Codes.Services.Interfaces.ICustomerCategoryServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.CustomerCategoryController.Add(Codes.Services.Dto.CustomerCategoryDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CustomerCategoryController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CustomerCategoryController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CustomerCategoryController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.MainFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CustomerCategoryController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CustomerCategoryController.Update(Codes.Services.Dto.CustomerCategoryDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.CustomerController">
            <summary>
            Customer Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.CustomerController.#ctor(Codes.Services.Interfaces.ICustomerServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.CustomerController.Add(Codes.Services.Dto.CustomerDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CustomerController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CustomerController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CustomerController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.CustomerFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CustomerController.GetDropDown(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.SearchCriteriaFilter})">
            <summary>
            GetAll Data paged for dropdown
            </summary>
            <param name="filter">Filter resposiable for search</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CustomerController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CustomerController.Update(Codes.Services.Dto.CustomerDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.CustomerController.GetList(System.Collections.Generic.List{System.Guid})">
            <summary>
            Get list of customer by customer ids list  
            </summary>
            <param name="ids">customer ids</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.DriverController">
            <summary>
            Driver Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.DriverController.#ctor(Codes.Services.Interfaces.IDriverServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.DriverController.Add(Codes.Services.Dto.DriverDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.DriverController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.DriverController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.DriverController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.DriverFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.DriverController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.DriverController.Update(Codes.Services.Dto.DriverDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.InvoiceTypeController">
            <summary>
            Invoice Type Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.InvoiceTypeController.#ctor(Codes.Services.Interfaces.IInvoiceTypeServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.InvoiceTypeController.Add(Codes.Services.Dto.InvoiceTypeDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.InvoiceTypeController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.InvoiceTypeController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.InvoiceTypeController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.MainFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.InvoiceTypeController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.InvoiceTypeController.Update(Codes.Services.Dto.InvoiceTypeDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.LookupsController">
            <inherit  />
        </member>
        <member name="M:Codes.API.Controllers.LookupsController.#ctor(Codes.Services.Interfaces.ILookupsServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.LookupsController.GetLookups">
            <summary>
            Get all lookups in end point data 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.LookupsController.GetTrackSettings(System.Guid,System.DateTime)">
            <summary>
            Get track setting for policy
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.LookupsController.GetTypeNameForOpeningBalance(System.Collections.Generic.IEnumerable{Tenets.Common.ServicesCommon.Codes.Parameters.OpeningBalanceParameters})">
            <summary>
            Get Type for CustomerName or Rent Name  
            </summary>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.RentController">
            <summary>
            Rent Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.RentController.#ctor(Codes.Services.Interfaces.IRentServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.RentController.Add(Codes.Services.Dto.RentDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.RentController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.RentController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.RentController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.RentFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.RentController.GetDropDown(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.SearchCriteriaFilter})">
            <summary>
            GetAll Data paged for dropdown
            </summary>
            <param name="filter">Filter resposiable for search</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.RentController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.RentController.Update(Codes.Services.Dto.RentDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.RepresentativeController">
            <summary>
            Representative Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.RepresentativeController.#ctor(Codes.Services.Interfaces.IRepresentativeServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.RepresentativeController.Add(Codes.Services.Dto.RepresentativeDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.RepresentativeController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.RepresentativeController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.RepresentativeController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.RepresentativeFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.RepresentativeController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.RepresentativeController.Update(Codes.Services.Dto.RepresentativeDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.TaxCategoryController">
            <summary>
            Tax Category Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.TaxCategoryController.#ctor(Codes.Services.Interfaces.ITaxCategoryServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.TaxCategoryController.Add(Codes.Services.Dto.TaxCategoryDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TaxCategoryController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TaxCategoryController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TaxCategoryController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.MainFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TaxCategoryController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TaxCategoryController.Update(Codes.Services.Dto.TaxCategoryDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.TaxTypeController">
            <summary>
            Tax Type Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.TaxTypeController.#ctor(Codes.Services.Interfaces.ITaxTypeServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.TaxTypeController.Add(Codes.Services.Dto.TaxTypeDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TaxTypeController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TaxTypeController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TaxTypeController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.TaxTypeFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TaxTypeController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TaxTypeController.Update(Codes.Services.Dto.TaxTypeDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.TrackController">
            <summary>
            Track Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.TrackController.#ctor(Codes.Services.Interfaces.ITrackServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.TrackController.Add(Codes.Services.Dto.TrackDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.MainFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackController.GetDropDown(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.SearchCriteriaFilter})">
            <summary>
            GetAll Data paged for dropdown
            </summary>
            <param name="filter">Filter resposiable for search</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackController.Update(Codes.Services.Dto.TrackDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.TrackPriceController">
            <summary>
            Track Price Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.TrackPriceController.#ctor(Codes.Services.Interfaces.ITrackPriceServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.TrackPriceController.Add(Codes.Services.Dto.TrackPriceDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackPriceController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackPriceController.GetByCustomerId(Tenets.Common.ServicesCommon.Transaction.Parameters.TrackPriceBasedOnParameters)">
            <summary>
            Get data by CustomerId
            </summary>
            <param name="trackPriceBasedOnParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackPriceController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackPriceController.GetAllCarTypes">
            <summary>
            GetAll car types
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackPriceController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.TrackPriceFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackPriceController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackPriceController.Update(Codes.Services.Dto.TrackPriceDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackPriceController.GetValueForTrack(System.Guid,System.DateTime,System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="customerId"></param>
            <param name="policyDate"></param>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Controllers.TrackSettingController">
            <summary>
            Track Setting Controller
            </summary>
        </member>
        <member name="M:Codes.API.Controllers.TrackSettingController.#ctor(Codes.Services.Interfaces.ITrackSettingServices)">
            <inheritdoc />
        </member>
        <member name="M:Codes.API.Controllers.TrackSettingController.Add(Codes.Services.Dto.TrackSettingDto)">
            <summary>
            Add data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackSettingController.Get(System.Guid)">
            <summary>
            Get data by Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackSettingController.GetAll">
            <summary>
            GetAll Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackSettingController.GetPaged(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.TrackSettingFilter})">
            <summary>
            GetAll Data paged
            </summary>
            <param name="filter">Filter resposiable for search and sort</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackSettingController.GetDropDown(Tenets.Common.ServicesCommon.Identity.Base.BaseParam{Tenets.Common.ServicesCommon.Codes.Parameters.SearchCriteriaFilter})">
            <summary>
            GetAll Data paged for dropdown
            </summary>
            <param name="filter">Filter resposiable for search</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackSettingController.Remove(System.Guid)">
            <summary>
            Remove data by id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:Codes.API.Controllers.TrackSettingController.Update(Codes.Services.Dto.TrackSettingDto)">
            <summary>
            Update data 
            </summary>
            <param name="model">Object content</param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Program">
            <summary>
            Kick Off
            </summary>
        </member>
        <member name="M:Codes.API.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Codes.API.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Web Host
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Codes.API.Startup">
            <summary>
            Start Up Class
            </summary>
        </member>
        <member name="M:Codes.API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <inheritdoc />
        </member>
        <member name="P:Codes.API.Startup.Configuration">
            <summary>
            Property
            </summary>
        </member>
        <member name="M:Codes.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">Contract for service descriptors</param>
        </member>
        <member name="M:Codes.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
             This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">Provide mechanisms to configure requests</param>
            <param name="env">Provide information about hosting</param>
        </member>
    </members>
</doc>
